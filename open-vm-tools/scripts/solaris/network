#!/bin/sh
##########################################################
# Copyright (C) 2006-2024 VMware, Inc. All rights reserved.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation version 2.1 and no later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the Lesser GNU General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA.
#
##########################################################

##########################################################################
# DO NOT modify this file directly as it will be overwritten the next
# time the VMware Tools are installed.
##########################################################################

#
# network (Solaris 11.4)
#
# Solaris's ipadm handles DHCP arguments directly, so we
# may use it to suspend and renew DHCP leases upon receipt of suspend
# and resume events, respectively.
#


echo `date` ": Executing '$0'"
echo


#
# main --
#
#    Script entry point.
#
# Results:
#
# Side effects:
#

main() {
   activeList=/var/run/vmware-active-nics
   exitCode=0

   case "$1" in
      poweron-vm)
         rm -f $activeList
         ;;
      suspend-vm)
         >$activeList

         # Release DHCP addresses and note each interface in our active list
         # so it can be brought back up on resume
         for addr in `ipadm show-addr -p -o addrobj,type,state | grep ':dhcp:ok' | cut -d: -f1`; do
            echo "$0: disabling DHCP address for $addr"
            echo "$addr" >> $activeList
            ipadm disable-addr -t "$addr"
         done
      ;;
      resume-vm)
         if [ -s $activeList ]; then
            while read addr; do
               echo "$0: bringing up DHCP on $addr"
               ipadm enable-addr -t "$addr"
               rc=$? && [[ $rc != 0 ]] && { ipadm refresh-addr "$addr"; rc=$?; }
               exitCode=`expr $exitCode \| $rc`
            done < $activeList
         fi
      ;;
      *)
      ;;
   esac

   return $exitCode
}

main "$@"
